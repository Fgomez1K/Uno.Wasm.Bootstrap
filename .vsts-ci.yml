
resources:
  containers:
  - container: nv-bionic-wasm
    image: nventive/wasm-build:1.0-bionic


jobs:
- job: Windows

  pool:
    name: Default
    demands:
    - VisualStudio_Version -equals 15.9.7
    
  variables:
    NUGET_PACKAGES: $(Agent.WorkFolder)\.nuget

  steps:
  - checkout: self
    clean: true

  - task: NuGetToolInstaller@0
    inputs:
      versionSpec: 4.9.1
      checkLatest: false
    
  - task: GitVersion@4
    # Ignore gitversion for forks, until this is fixed:
    # https://developercommunity.visualstudio.com/content/problem/284991/public-vsts-previouw-cant-set-build-number-of-pr-b.html
    condition: eq(variables['System.PullRequest.IsFork'], 'False')
    inputs:
      updateAssemblyInfo: false

  - powershell: .\build\build.ps1 -script build\build.cake
    displayName: Build 

  - task: CopyFiles@2
    inputs:
      SourceFolder: $(build.sourcesdirectory)
      Contents: ' $(build.sourcesdirectory)\build\nuget\*.nupkg'
      TargetFolder: $(build.artifactstagingdirectory)
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: uno-wasm-bootstrap-drop
      ArtifactType: Container

- job: Linux

  container: nv-bionic-wasm

  workspace:
    clean: all
      
  pool:
    vmImage: 'ubuntu-16.04'

  variables:
    NUGET_PACKAGES: $(build.sourcesdirectory)/.nuget

  steps:
  - checkout: self
    clean: true

  - bash: |
      sudo chmod -R 777 /emsdk
      cd /emsdk
      sudo ./emsdk activate sdk-1.38.28-64bit

    displayName: 'Setup Emscripten'

  - bash: |
      curl -sL https://deb.nodesource.com/setup_11.x | sudo -E bash -
      sudo apt-get install -y nodejs

    displayName: 'Install node'

  - task: NuGetToolInstaller@0
    inputs:
      versionSpec: 4.9.1
      checkLatest: false

  - bash: |
      source /emsdk/emsdk_env.sh
      msbuild /r /t:Publish /p:Configuration=Release src/Uno.Wasm.Bootstrap.sln

    displayName: Build 

  - task: CopyFiles@2
    inputs:
      SourceFolder: $(build.sourcesdirectory)/src/Uno.Wasm.AotTests/bin/Release/netstandard2.0/publish
      Contents: '**/*.*'
      TargetFolder: $(build.artifactstagingdirectory)
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false

  - bash: |
      cd $(build.sourcesdirectory)/src/Uno.Wasm.AotTests/bin/Release/netstandard2.0/dist
      python server.py &
      cd $(build.sourcesdirectory)/src/WasmAot.UITests
      npm install
      node app

  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: uno-wasm-bootstrap-linux-aot
      ArtifactType: Container

- job: macOS

  pool:
    vmImage: 'macOS-10.13'

  variables:
    NUGET_PACKAGES: $(Agent.WorkFolder)/.nuget
    SourceLinkEnabled: false

  steps:
  - bash: |
      cd $(Agent.WorkFolder)
      wget https://github.com/ninja-build/ninja/releases/download/v1.8.2/ninja-mac.zip
      unzip ninja-mac.zip -d ninja-mac
     
    displayName: 'Install Ninja'

  - bash: |
      cd $(Agent.WorkFolder)
      git clone https://github.com/juj/emsdk.git
      cd emsdk
      ./emsdk install latest
      ./emsdk activate latest

    displayName: 'Install Emscripten'

  - task: NuGetToolInstaller@0
    inputs:
      versionSpec: 4.7.0
      checkLatest: false

  - bash: |
      export PATH=$PATH:$(Agent.WorkFolder)/ninja-mac
      source $(Agent.WorkFolder)/emsdk/emsdk_env.sh
      msbuild /m /r /t:Publish /p:Configuration=Release src/Uno.Wasm.Bootstrap.sln

    displayName: Build 

  - task: CopyFiles@2
    inputs:
      SourceFolder: $(build.sourcesdirectory)/src/Uno.Wasm.AotTests/bin/Release/netstandard2.0/dist
      Contents: '**/*.*'
      TargetFolder: $(build.artifactstagingdirectory)
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false

  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: uno-wasm-bootstrap-macos-aot
      ArtifactType: Container
